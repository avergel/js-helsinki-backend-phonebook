{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","deleteFunction","map","person","key","name","number","onClick","Filter","value","filterFunction","onChange","PersonForm","nameHandler","numberHandler","onSubmit","type","errorClass","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","infoClass","Notification","message","className","cssClass","style","baseUrl","getAll","axios","get","then","response","data","o","id","reduce","x","y","maxId","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setMessage","messageClass","setMessageClass","useEffect","personService","catch","error","alert","console","event","target","preventDefault","existing","p","length","window","confirm","returnedPerson","setTimeout","personAdded","log","concat","toLowerCase","includes","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39c63b1b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ persons, deleteFunction }) => {\r\n    return (\r\n        <div>\r\n            {persons.map(person =>\r\n                <p key={person.name}>\r\n                    {person.name} {person.number}\r\n                    &nbsp;\r\n                    <button onClick={() => deleteFunction(person)}>delete</button>\r\n                </p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({ value, filterFunction }) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={value} onChange={filterFunction} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({name, number, nameHandler, numberHandler, onSubmit}) => {\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div>name: <input value={name} onChange={nameHandler} /></div>\r\n            <div>number: <input value={number} onChange={numberHandler} /></div>\r\n            <div><button type=\"submit\" >add</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst errorClass = {\r\n  color: 'red',\r\n  background: 'lightgrey',\r\n  fontSize: '20px',\r\n  borderStyle: 'solid',\r\n  borderRadius: '5px',\r\n  padding: '10px',\r\n  marginBottom: '10px',\r\n}\r\n\r\nconst infoClass = {\r\n  color: 'green',\r\n  background: 'lightgrey',\r\n  fontSize: '20px',\r\n  borderStyle: 'solid',\r\n  borderRadius: '5px',\r\n  padding: '10px',\r\n  marginBottom: '10px',\r\n}\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    const cssClass = className === 'error' ? errorClass : infoClass\r\n  \r\n    return (\r\n      <div style={cssClass}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios\r\n        .get(baseUrl)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst getMaxId = () => {\r\n    return getAll()\r\n        .then(response =>\r\n            response\r\n                .map(o => o.id)\r\n                .reduce((x, y) => (x > y) ? x : y, 1))\r\n}\r\n\r\nconst create = (person) => {\r\n    return getMaxId()\r\n        .then(maxId =>\r\n            axios\r\n                .post(baseUrl, { ...person, id: maxId + 1 })\r\n                .then(response => response.data))\r\n}\r\n\r\nconst update = (person) => {\r\n    return axios\r\n        .put(`${baseUrl}/${person.id}`, person)\r\n        .then(response => response.data)\r\n}\r\nconst remove = (id) => {\r\n    return axios\r\n        .delete(`${baseUrl}/${id}`)\r\n        .then(response => response.data)\r\n}\r\n\r\nexport default { create, getAll, remove, update }","import React, { useState, useEffect } from 'react'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filter, setFilter] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const [messageClass, setMessageClass] = useState(null)\r\n\r\n    const refreshPersons = () => {\r\n        personService\r\n            .getAll()\r\n            .then(response => {\r\n                setPersons(response)\r\n            })\r\n            .catch(error => {\r\n                alert('the operation couldn\\'t be executed')\r\n                console.error(error)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshPersons()\r\n    }, [])\r\n\r\n    const handleNewName = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n    const handleNewNumber = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleAddPerson = (event) => {\r\n        event.preventDefault()\r\n        const existing = persons.filter(p => p.name === newName)\r\n        if (existing.length > 0) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n                personService\r\n                    .update({ ...existing[0], number: newNumber })\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\r\n                        setMessage(`${returnedPerson.name}'s number replaced`)\r\n                        setMessageClass('info')\r\n                        setTimeout(() => {\r\n                            setMessage(null)\r\n                        }, 5000)\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.data.error) {\r\n                            setMessage(error.response.data.error)\r\n                        } else {\r\n                            setMessage('the operation couldn\\'t be executed')\r\n                        }\r\n                            setMessageClass('error')\r\n                        setTimeout(() => {\r\n                            setMessage(null)\r\n                        }, 5000)\r\n                        console.error(error.response.data)\r\n                    })\r\n                setNewName('')\r\n                setNewNumber('')\r\n            }\r\n        } else {\r\n            const newPerson = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personService\r\n                .create(newPerson)\r\n                .then(personAdded => {\r\n                    console.log(personAdded)\r\n                    setPersons(persons.concat(personAdded))\r\n                    setMessage(`Added ${personAdded.name}`)\r\n                    setMessageClass('info')\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.data.error) {\r\n                        setMessage(error.response.data.error)\r\n                    } else {\r\n                        setMessage('the operation couldn\\'t be executed')\r\n                    }\r\n                    setMessageClass('error')\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                    console.error(error.response.data)\r\n                })\r\n            setNewName('')\r\n            setNewNumber('')\r\n        }\r\n    }\r\n\r\n    const handleFilter = (event) => {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    const deletePerson = (personToDelete) => {\r\n        if (window.confirm(`Delete ${personToDelete.name}?`)) {\r\n            console.log(personToDelete)\r\n            personService\r\n                .remove(personToDelete.id)\r\n                .then(() => {\r\n                    setPersons(persons.filter(person => person.id !== personToDelete.id))\r\n                    setMessage(`${personToDelete.name} deleted`)\r\n                    setMessageClass('info')\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    setMessage(`Information of ${personToDelete.name} has already been removed from server`)\r\n                    setMessageClass('error')\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                    console.error(error)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={message} className={messageClass} />\r\n            <Filter value={filter} filterFunction={handleFilter} />\r\n            <h3>add a new</h3>\r\n            <PersonForm\r\n                name={newName}\r\n                number={newNumber}\r\n                nameHandler={handleNewName}\r\n                numberHandler={handleNewNumber}\r\n                onSubmit={handleAddPerson}\r\n            />\r\n            <h3>Numbers</h3>\r\n            <Persons persons={persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))}\r\n                deleteFunction={deletePerson} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}